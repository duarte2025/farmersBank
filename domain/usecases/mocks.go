// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package usecases

import (
	"context"
	"github.com/duarte2025/farmersBank/domain/entities"
	"sync"
)

// Ensure, that CreateAccountRepositoryMock does implement CreateAccountRepository.
// If this is not the case, regenerate this file with moq.
var _ CreateAccountRepository = &CreateAccountRepositoryMock{}

// CreateAccountRepositoryMock is a mock implementation of CreateAccountRepository.
//
//	func TestSomethingThatUsesCreateAccountRepository(t *testing.T) {
//
//		// make and configure a mocked CreateAccountRepository
//		mockedCreateAccountRepository := &CreateAccountRepositoryMock{
//			CreateAccountFunc: func(ctx context.Context, account entities.Account) error {
//				panic("mock out the CreateAccount method")
//			},
//		}
//
//		// use mockedCreateAccountRepository in code that requires CreateAccountRepository
//		// and then make assertions.
//
//	}
type CreateAccountRepositoryMock struct {
	// CreateAccountFunc mocks the CreateAccount method.
	CreateAccountFunc func(ctx context.Context, account entities.Account) error

	// calls tracks calls to the methods.
	calls struct {
		// CreateAccount holds details about calls to the CreateAccount method.
		CreateAccount []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Account is the account argument value.
			Account entities.Account
		}
	}
	lockCreateAccount sync.RWMutex
}

// CreateAccount calls CreateAccountFunc.
func (mock *CreateAccountRepositoryMock) CreateAccount(ctx context.Context, account entities.Account) error {
	callInfo := struct {
		Ctx     context.Context
		Account entities.Account
	}{
		Ctx:     ctx,
		Account: account,
	}
	mock.lockCreateAccount.Lock()
	mock.calls.CreateAccount = append(mock.calls.CreateAccount, callInfo)
	mock.lockCreateAccount.Unlock()
	if mock.CreateAccountFunc == nil {
		var (
			errOut error
		)
		return errOut
	}
	return mock.CreateAccountFunc(ctx, account)
}

// CreateAccountCalls gets all the calls that were made to CreateAccount.
// Check the length with:
//
//	len(mockedCreateAccountRepository.CreateAccountCalls())
func (mock *CreateAccountRepositoryMock) CreateAccountCalls() []struct {
	Ctx     context.Context
	Account entities.Account
} {
	var calls []struct {
		Ctx     context.Context
		Account entities.Account
	}
	mock.lockCreateAccount.RLock()
	calls = mock.calls.CreateAccount
	mock.lockCreateAccount.RUnlock()
	return calls
}
